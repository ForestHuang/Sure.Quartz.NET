<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="System.Configuration.IgnoreSectionHandler"/>
  </configSections>

  <log4net>
    <!--定义输出到文件中-->
    <appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender">
      <!--定义文件存放位置-->
      <file value="Error\\"/>
      <!--是否追加到文件,默认为true，通常无需设置-->
      <appendToFile value="true"/>
      <!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
      <rollingStyle value="Date" />
      <datePattern value="'Log-'yyyy-MM-dd'.txt'"/>
      <!--日志文件名是否为静态-->
      <StaticLogFileName value="false"/>
      <!--多线程时采用最小锁定-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <!--日志最大可备份数-->
      <maxSizeRollBackups value="10"/>
      <!--日志文件大小-->
      <maximumFileSize value="1024KB"/>

      <layout type="log4net.Layout.PatternLayout">
        <!--
          %m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息 
          %n(new line):换行 
          %d(datetime):输出当前语句运行的时刻 
          %r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数 
          %t(thread id):当前语句所在的线程ID 
          %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等 
          %c(class):当前日志对象的名称，例如：
          %L：输出语句所在的行号 
          %F：输出语句所在的文件名 
          %-数字：表示该项的最小长度，如果不够，则用空格填充
        -->
        <!--输出格式-->
        <!--样例：2008-03-26 13:42:32,111 [10] INFO  Log4NetDemo.MainClass [(null)] - info-->
        <!--<conversionPattern value="%n记录时间 : %date %n线程 ID : [%thread] %n日志级别 : %-5level %n出错位置 : %logger property:[%property{NDC}]  %n错误信息 : %message%newline" />-->
        <param name="conversionPattern" value="%nBegin-----------------%c-----------------Begin %n日志位置 : %c %n日志时间 : %d %n日志类型 : %-5p %n日志内容 : %message %nEnd-----------------%c-----------------End%n" />

        <!--每条日志开头文字说明-->
        <!--<header value="&#13;&#10;&#13;&#10;"  />-->

        <!--每条日志末尾的文字说明-->
        <!--<footer value="&#13;&#10;&#13;&#10;" />-->

      </layout>

    </appender>

    <!--定义输出到控制台命令行中-->
    <appender name="ColoredConsoleAppender" type="log4net.Appender.ColoredConsoleAppender">
      <mapping>
        <level value="ERROR" />
        <foreColor value="Red, HighIntensity" />
      </mapping>
      <mapping>
        <level value="Info" />
        <foreColor value="Green" />
      </mapping>
      <layout type="log4net.Layout.PatternLayout">
        <param name="conversionPattern" value="%nBegin-----------------%c-----------------Begin %n日志位置 : %c %n日志时间 : %d %n日志类型 : %-5p %n日志内容 : %message %nEnd-----------------%c-----------------End%n" />
      </layout>

      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="Info" />
        <param name="LevelMax" value="Fatal" />
      </filter>
    </appender>

    <!--定义输出到数据库中，这里举例输出到Access数据库中，数据库为C盘的log4net.mdb-->
    <appender name="AdoNetAppender_Access" type="log4net.Appender.ADONetAppender">
      <bufferSize value="1" />
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <connectionString value="Data Source=10.130.25.68;Initial Catalog=Sure_PersoneProject;User ID=sa;Password=sasa" />
      <commandText value="INSERT INTO dbo.Sure_LoggerInfo (LoggerDate ,LoggerLevel ,LoggerThread ,LoggerPosition ,LoggerMessage ,LoggerAction ,LoggerException ) VALUES (@LoggerDate, @LoggerLevel, @LoggerThread, @LoggerPosition, @LoggerMessage, @LoggerAction ,@LoggerException )" />
      <!--定义各个参数-->
      <!-- 日志时间 LoggerDate -->
      <parameter>
        <parameterName value="@LoggerDate" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>
      <!-- 日志级别 LoggerLevel -->
      <parameter>
        <parameterName value="@LoggerLevel" />
        <dbType value="String" />
        <size value="100" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <!-- 线程ID LoggerThread -->
      <parameter>
        <parameterName value="@LoggerThread" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread" />
        </layout>
      </parameter>
      <!--日志错误位置 LoggerPosition -->
      <parameter>
        <parameterName value="@LoggerPosition" />
        <dbType value="String" />
        <size value="500" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%F" />
        </layout>
      </parameter>
      <!-- 错误日志信息 LoggerMessage -->
      <parameter>
        <parameterName value="@LoggerMessage" />
        <dbType value="String" />
        <size value="3000" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>
      <!-- 错误类 LoggerAction -->
      <parameter>
        <parameterName value="@LoggerAction" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.PatternLayout" >
          <conversionPattern value = "%c"/>
        </layout>
      </parameter>
      <!-- 异常信息 LoggerException -->
      <parameter>
        <parameterName value="@LoggerException" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.PatternLayout" >
          <conversionPattern value = "%message%newline"/>
        </layout>
      </parameter>
    </appender>

    <!--定义日志的输出媒介，下面定义日志以四种方式输出。也可以下面的按照一种类型或其他类型输出。-->
    <root>
      <level value="ERROR"/>
      <level value="INFO"/>
      
      <!--文件形式记录日志-->
      <appender-ref ref="LogFileAppender" />
      <!--控制台控制显示日志-->
      <appender-ref ref="ColoredConsoleAppender" />
      <!--输出到数据库-->
      <!-- <appender-ref ref="AdoNetAppender_Access" /> -->

    </root>

  </log4net>

  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.2" />
  </startup>

</configuration>